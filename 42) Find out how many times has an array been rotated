	int findKRotation(int nums[], int n) {
	    
	    // we have to just return index of minimum element
	    
	     int start=0;
       
        int end=n-1;
        
        
        while(start<=end)
        {
            int mid=(start+end)/2;
            int next=(mid+1)%n;
            int prev=(mid+n-1)%n;
            
            
           
            if(nums[start]<=nums[end])
            {
                return start;
            }
            
         if(nums[mid]<=nums[prev] and nums[mid]<=nums[next])
            {
                return mid;
            }
            
            else if(nums[mid]<=nums[end])
            {
                end=mid-1;
            }
            
            else if(nums[start]<=nums[mid])
            {
                start=mid+1;
            }
            
            
        }
        
        
        
        return -1;
        
	}
